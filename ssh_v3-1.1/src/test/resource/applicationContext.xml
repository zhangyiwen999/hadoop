<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!-- 自动加载Annotation bean -->
	<context:annotation-config />
	<context:component-scan base-package="demo" />
	<context:component-scan base-package="ssh" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>
	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="packagesToScan">
			<list>
				<value>demo.model</value>
				<value>ssh.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate"> 
		<property name="sessionFactory" ref="sessionFactory"></property> </bean> -->
	
	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->
	
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务切面 -->
	<aop:config>
		<aop:pointcut id="defaultServiceOperation"
			expression="execution(public * demo.service.*Service.*(..))" />

		<aop:advisor pointcut-ref="defaultServiceOperation"
			advice-ref="defaultTxAdvice" />
	</aop:config>

	<tx:advice id="defaultTxAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 先暂定所有方法都加事务 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- HdfsManangerAction AOP ,不使用spring aop-->
<!-- 	<aop:config>
		<aop:pointcut id="hdfsAuth"
			expression="execution(public * ssh.action.HdfsManagerAction.search*(..))" />

		<aop:aspect id="authAspect" ref="hdfsAuthInterceptor">
			<aop:before method="before" pointcut="execution(public * ssh.action.HdfsManagerAction.search*(..))"/>
		</aop:aspect>
	</aop:config>
	<bean id="hdfsAuthInterceptor" class="ssh.aop.HdfsAuthInterceptor" /> -->
	



	<bean id="hadoopUtils" class="ssh.util.HadoopUtils" init-method="initFs" />


</beans>